<main class="bg-neutral-900">
  <!-- <div class="group flex flex-col gap-16 w-fit">
    <div
      class="w-16 h-16 bg-red-500 rounded-full ease-[cubic-bezier(0,0,1,3)] group-hover:ml-16 transition-[500ms]"
    >
    </div>
  </div> -->
  <div class="relative h-[100vh] overflow-hidden">
    <div
      class="anim-target absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-96 h-96 bg-red-500 rounded-full flex flex-col justify-center items-center"
    >
      <img src="/public/svgs/gate.svg" class="w-40" />
    </div>
  </div>
  <section class="p-16 flex flex-col gap-16 overflow-hidden">
    <div class="w-32 h-32 bg-indigo-500 rounded-full c0"></div>
    <div class="w-32 h-32 bg-indigo-500 rounded-full c1"></div>
    <h1
      id="name"
      class="flex items-center w-[fit] text-indigo-500 font-bold text-[2rem] c2 flex-wrap"
    >
      Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur
      sapiente possimus eius quos perspiciatis voluptatem voluptate sit nulla
      unde eligendi doloremque ratione illo deserunt alias minus, velit,
      pariatur voluptates quaerat!
    </h1>
  </section>
</main>

<script>
  import anime from "animejs/lib/anime.es";

  const maxSize = Math.sqrt(
    window.innerWidth * window.innerWidth +
      window.innerHeight * window.innerHeight
  );

  anime({
    targets: ".anim-target",
    width: maxSize,
    height: maxSize,
    easing: "linear",
    duration: 1000,
  });

  anime({
    targets: ".c0",
    marginLeft: "100%",
    translateX: "-100%",
    loop: true,
    direction: "alternate",
    easing: "easeInOutSine",
    duration: 1000,
  });

  anime({
    targets: ".c1",
    marginLeft: "100%",
    translateX: "-100%",
    loop: true,
    direction: "alternate",
    easing: "spring(1, 80, 10, 0)",
    duration: 1000,
  });
  const nameEl = document.getElementById("name") as HTMLHeadingElement;

  if (nameEl) {
    const name = nameEl.innerText;
    nameEl.innerText = "";
    name.split("").forEach((letter) => {
      const span = document.createElement("span");
      span.innerText = letter;
      span.className = "whitespace-pre opacity-0 letter";
      nameEl.appendChild(span);
    });
  }

  anime({
    targets: ".letter",
    opacity: 1,
    delay: anime.stagger(25),
  });
</script>
